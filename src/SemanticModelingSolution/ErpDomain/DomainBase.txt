# This file contains the common concepts and related terms
#
# Syntax:
# "#" The entire line will be ignored when parsing this file
# "$" The entire line is used as a description for the immediately following line which must define a Concept
# - A word at the beginning of the line defines the Concept
# - Under the concept a number of lines may follow indented with spaces
#   Those lines defines the terms that are used to identify the Concept
#   The syntax for these lines is: "Context:Term[ConceptSpecifier]:Weight:Description"
#   Only the Term is mandatory
#
# Example:
#
# $ SI Mass (kg)
# UnitMass
#     :Weight
#     :Net[Net]
#     :Gross[Gross]: 100: Gross weight
#     :Tare[Tare] : 100: Tare weight
# 
# Explanation:
# Word         | Meaning     | Notes
# ----------------------------------------------
# UnitMass     | Concept     | 
# Weight       | Term        | 
# Net          | Term        | 
# Net          | Specifier   | provides an additional info to the concept UnitMass
# Gross        | Term        |
# Gross        | Specifier   |
# 100          | Weight      | when omitted, the default weight is 100
# Gross weight | Description | a description for this term
# 
# As a result, the following will be added to the domain:
# Links.Add(new TermToConcept(KnownConcepts.UnitMass, KnownConcepts.Any, KnownConceptSpecifiers.None, KnownTerms.UnitMass, 100));
# Links.Add(new TermToConcept(KnownConcepts.UnitMass, KnownConcepts.Any, KnownConceptSpecifiers.None, KnownTerms.Weight, 100));
# Links.Add(new TermToConcept(KnownConcepts.UnitMass, KnownConcepts.Any, KnownConceptSpecifiers.Net, KnownTerms.Net, 100));
# Links.Add(new TermToConcept(KnownConcepts.UnitMass, KnownConcepts.Any, KnownConceptSpecifiers.Gross, KnownTerms.Gross, 100));
# Links.Add(new TermToConcept(KnownConcepts.UnitMass, KnownConcepts.Any, KnownConceptSpecifiers.Tare, KnownTerms.Tare, 100));
# 
# Please note that a term having the same string of the Concept is also defined ("UnitMass")
# 


Product
    :Material : 100
    :Article: 100
    :Ingredient : 80
    :Excipient : 80
    :Item : 50

Lot
    :Batch : 100

// A set of ingredients making up a product
Composition
    :Inventory
    :Stock
    :Goods
    :Freight
    :Supply
    :Picking
#    :Ingredient : 100

Company
    :Enterprise
    :Branch : 80
    :Client[Customer]
    :Customer[Customer]
    :Supplier[Supplier]
    :Vendor[Supplier]

Document
    :Invoice[Invoice]
    :Bill[Invoice]
    :Certificate
    :Receipt
    :Record
    :Report
    :Paper
    :Form

Order
    :OrderItem[Item]

Purchase
    :Purchasing

Sales
    :Selling

Delivery


Workflow
    :Policy
    :Incoming[In]
    :Received[In]
    :Enter[In]
    :Outgoing[Out]
    :Exit[Out]
    :Input[In]
    :In[In]
    :Output[Out]
    :Out[Out]


// Human readable descriptions
HumanDescription
    :Description: 100
    :Phrase : 80
    :Note: 100
    :Notes: 100
    :Remarks
    Product:Recipe
    Product:Formula
    Product:Method
    Product:Methodology
    Product:Phase
    :Hint
    :Suggestion


Attribute
    :Category
    :Type
    :Kind
    :Classification
    :Sample

#TODO: UnitOfMeasure is a problem because of the casing
Units
    :UnitOfMeasure
    :Uom

$ SI Length (meter)
UnitLength
    :Length
    :Size
    :Quantity
    :Dimension

UnitVolume
    :Volume


$ SI Mass (kg)
UnitMass
    :Weight
    :Net[Net]
    :Gross[Gross]: 100: Gross weight
    :Tare[Tare] : 100: Tare weight



$ Quantitative measure 
QuantitativeMeasure
    :Quantity
    :Amount
    :Qtt
    :Number
    :Net
    :Gross
    :Tare
    :Value:80
    :Percentage
    :Percent
    :Total
    :Partial


$ Qualitative measure
QualitativeMeasure
    :Color
    :Appearance
    :Shape : 80



$ Linear Direction
LinearDirection
    :Direction : 50

$ Angular Direction
AngularDirection
    :Direction : 50

$ Absolute date or time
AbsoluteTime
    :Expiry
    :Expiration
    :Date
    :Time

$ Relative date or time
RelativeTime

Package
    :Packet
    :Pack
    :Parcel

Shipping
    :Transport
    :Shipment

$ Any absolute location information
Coordinates
    :Location
    :GPS
    :Latitude
    :Longitude


$ Any relative location information
RelativePosition
    :Index[Index]:100
    :Sequence[Index]
    :Seq[Index]
    :Line[Index]:100

# State collides with State / RelativePosition
$ Any state related information (open/close, shipped, deleted, etc.)
Status
    :Create
    :Modify
    :Update
    :Delete
    :Created
    :Modified
    :Updated
    :Deleted
    #
    :Closed
    :Opened
    :Started
    :Finished
    :Locked
    :Free

Constraint

Validation
    :Valid
    :Checked
    Product:Control
    Product:Check

// Process comment 1
Process
    :Procedure


$ A complex entity
Entity

Bank

Money
    :Currency[Currency]
    :Credit
    :Cash
    :Price
    :Payment
    :Tax[Tax]
    :Percentage: 30
    :Percent:30


Log

Bounds
    :Limits
    :Minimum[Min]
    :Min[Min]
    :Maxiumum[Max]
    :Max[Max]
    :High[High]
    :Medium[Medium]
    :Low[Low]

Safety
    :Clp
    :Hazard
    :Signal
    :Warning
    :Dangerous
    :Severity
    :Mandatory
    :Approval
    :Approved
    :Signature
    :Signed

Place
    :Store
    :Warehouse


ZTooGeneric
    :Subject

$ address
Address
#    :Address[Street]
    :Street[Street]
    :Zip[Zip]
    :ZipCode[Zip]
    :City[City]
    :Province[Province]
    :State[State]
    :Region[State]
    :Country[Country]
    :Nation[Country]
    :Email[Email]
    :Phone[Phone]
    :Cell[Phone]
    :Website[Url]
    :Url[Url]
